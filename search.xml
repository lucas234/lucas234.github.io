<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[my first blog]]></title>
    <url>%2F2019%2F08%2F15%2Fmy-first-blog%2F</url>
    <content type="text"><![CDATA[前提条件 Windows 10或者更新版本 需要WinAppDriver 环境搭建 打开Windows PC的开发者模式 下载Windows SDK并默认安装 下载Windows driver并默认安装 运行WinAppDriver.exe（记得要用admin权限运行）， 默认路径 (C:\Program Files (x86)\Windows Application Driver) 可以自定义地址或端口： 123WinAppDriver.exe 4727WinAppDriver.exe 127.0.0.1 4725WinAppDriver.exe 127.0.0.1 4723/wd/hub 如下图： Windows 自动化脚本运行脚本前要打开 WinAppDriver.exe对于Windows App来说，只需要传一个app capabilities 即可。对于UWP的App，app对应的值为Application Id（App ID）。关于如何获取APP ID，可以使用powershell命令get-StartApps来获取，打开powershell终端运行：get-StartApps | select-string &quot;计算器&quot;即可获取值（运行命令之前先打开计算器）。以下是java样例代码： 1234DesiredCapabilities cap = new DesiredCapabilities();cap.setCapability("app", "LexisNexisAPAC.LexisRed_wsek3cqrhvvz2!App");driver = new WindowsDriver(new URL("http://127.0.0.1:4723"), cap);driver.findElementByAccessibilityId("CalculatorResults"); 对于经典的Windows App，app对应的值为可执行的.exe文件路径。以下是java样例代码： 12345678// Launch NotepadDesiredCapabilities cap= new DesiredCapabilities();cap.SetCapability("app", "C:\\Windows\\System32\\notepad.exe");cap.SetCapability("appArguments", "MyTestFile.txt");cap.SetCapability("appWorkingDir", "C:\\MyTestFolder");driver= new WindowsDriver(new URL("http://127.0.0.1:4723"), cap);// Use the session to control the appdriver.FindElementByClassName("Edit").SendKeys("This is some text"); Windows定位元素使用Windows SDK提供的工具inspect.exe（C:\Program Files (x86)\Windows Kits\10\bin\x86或者C:\Program Files (x86)\Windows Kits\10\bin\10.0.18362.0\x64根据系统查看）来定位，详情查看inspect，或者使用AccExplorer32、UISpy定位。支持的定位方式： API 定位方法 对应inspect.exe的属性 例子 FindElementByAccessibilityId accessibility id AutomationId AppNameTitle FindElementByClassName class name ClassName TextBlock FindElementById id RuntimeId (decimal) 42.333896.3.1 FindElementByName name Name Calculator FindElementByTagName tag name LocalizedControlType (upper camel case) Text FindElementByXPath xpath Any //Button[0] 计算器的例子Python（GitHub）： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869import unittestfrom appium import webdriverclass WindowsCalculatorTest(unittest.TestCase): @classmethod def setUpClass(self): # set up appium desired_caps = &#123;&#125; desired_caps["app"] = "Microsoft.WindowsCalculator_8wekyb3d8bbwe!App" self.driver = webdriver.Remote(command_executor='http://127.0.0.1:4723', desired_capabilities=desired_caps) @classmethod def tearDownClass(self): self.driver.quit() def getresults(self): displaytext = self.driver.find_element_by_accessibility_id("CalculatorResults").text displaytext = displaytext.strip("显示为 ") displaytext = displaytext.rstrip(' ') displaytext = displaytext.lstrip(' ') return displaytext def test_addition(self): self.driver.find_element_by_name("一").click() self.driver.find_element_by_name("加").click() self.driver.find_element_by_name("七").click() self.driver.find_element_by_name("等于").click() self.assertEqual(self.getresults(), "8") def test_combination(self): self.driver.find_element_by_name("七").click() self.driver.find_element_by_name("乘以").click() self.driver.find_element_by_name("九").click() self.driver.find_element_by_name("加").click() self.driver.find_element_by_name("一").click() self.driver.find_element_by_name("等于").click() self.driver.find_element_by_name("除以").click() self.driver.find_element_by_name("八").click() self.driver.find_element_by_name("等于").click() self.assertEqual(self.getresults(), "8") def test_division(self): self.driver.find_element_by_name("八").click() self.driver.find_element_by_name("八").click() self.driver.find_element_by_name("除以").click() self.driver.find_element_by_name("一").click() self.driver.find_element_by_name("一").click() self.driver.find_element_by_name("等于").click() self.assertEqual(self.getresults(), "8") def test_multiplication(self): self.driver.find_element_by_name("九").click() self.driver.find_element_by_name("乘以").click() self.driver.find_element_by_name("九").click() self.driver.find_element_by_name("等于").click() self.assertEqual(self.getresults(), "81") def test_subtraction(self): self.driver.find_element_by_name("九").click() self.driver.find_element_by_name("减").click() self.driver.find_element_by_name("一").click() self.driver.find_element_by_name("等于").click() self.assertEqual(self.getresults(), "8")if __name__ == '__main__': unittest.main() java（GitHub）： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495import org.openqa.selenium.WebElement;import org.openqa.selenium.remote.DesiredCapabilities;import java.util.concurrent.TimeUnit;import java.net.URL;import io.appium.java_client.windows.WindowsDriver;import org.testng.Assert;import org.testng.annotations.*;public class WindowsCalculatorTest &#123; private static WindowsDriver CalculatorSession = null; private static WebElement CalculatorResult = null; @BeforeClass public static void setup() &#123; try &#123; DesiredCapabilities capabilities = new DesiredCapabilities(); capabilities.setCapability("app", "Microsoft.WindowsCalculator_8wekyb3d8bbwe!App"); CalculatorSession = new WindowsDriver(new URL("http://127.0.0.1:4723"), capabilities); CalculatorSession.manage().timeouts().implicitlyWait(2, TimeUnit.SECONDS); CalculatorResult = CalculatorSession.findElementByAccessibilityId("CalculatorResults"); &#125;catch(Exception e)&#123; e.printStackTrace(); &#125; finally &#123;&#125; &#125; @AfterClass public static void TearDown() &#123; CalculatorResult = null; if (CalculatorSession != null) &#123; CalculatorSession.quit(); &#125; CalculatorSession = null; &#125; @Test public void Addition() &#123; CalculatorSession.findElementByName("七").click(); CalculatorSession.findElementByName("七").click(); CalculatorSession.findElementByName("加").click(); CalculatorSession.findElementByName("八").click(); CalculatorSession.findElementByName("等于").click(); Assert.assertEquals("显示为 85", CalculatorResult.getText()); &#125; @Test public void Combination() &#123; CalculatorSession.findElementByName("七").click(); CalculatorSession.findElementByName("乘以").click(); CalculatorSession.findElementByName("九").click(); CalculatorSession.findElementByName("加").click(); CalculatorSession.findElementByName("一").click(); CalculatorSession.findElementByName("等于").click(); CalculatorSession.findElementByName("除以").click(); CalculatorSession.findElementByName("八").click(); CalculatorSession.findElementByName("等于").click(); Assert.assertEquals("显示为 8", CalculatorResult.getText()); &#125; @Test public void Division() &#123; CalculatorSession.findElementByName("六").click(); CalculatorSession.findElementByName("四").click(); CalculatorSession.findElementByName("除以").click(); CalculatorSession.findElementByName("八").click(); CalculatorSession.findElementByName("等于").click(); Assert.assertEquals("显示为 8", CalculatorResult.getText()); &#125; @Test public void Multiplication() &#123; CalculatorSession.findElementByName("六").click(); CalculatorSession.findElementByName("乘以").click(); CalculatorSession.findElementByName("八").click(); CalculatorSession.findElementByName("等于").click(); Assert.assertEquals("显示为 48", CalculatorResult.getText()); &#125; @Test public void Subtraction() &#123; CalculatorSession.findElementByName("九").click(); CalculatorSession.findElementByName("减").click(); CalculatorSession.findElementByName("一").click(); CalculatorSession.findElementByName("等于").click(); Assert.assertEquals("显示为 8", CalculatorResult.getText()); &#125;&#125; 参考 http://appium.io/docs/en/drivers/windows/ https://github.com/Microsoft/WinAppDriver?WT.mc_id=-blog-scottha 问题总结 org.openqa.selenium.WebDriverException: Failed to locate opened application window with appId 遇到此问题是在启动APP时报的错，成功的启动了APP，但是抛出这个异常，导致后续无法测试，目前找了一个临时解决方案：在new driver时增加try catch机制，即可避免，例如： 123456try &#123; driver = new WindowsDriver(new URL("http://127.0.0.1:4723"), cap);&#125;catch (Exception e)&#123;// e.printStackTrace(); driver = new WindowsDriver(new URL("http://127.0.0.1:4723"), cap);&#125;]]></content>
      <tags>
        <tag>appium</tag>
        <tag>windos app</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F08%2F12%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
